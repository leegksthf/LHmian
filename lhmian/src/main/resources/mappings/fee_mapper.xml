<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.app.fee.mapper.ManagementFeeMapper">

	<select id="selectFeeList" resultType="ManagementFeeVO">
		SELECT /*+ INDEX_DESC(MANAGEMENT_FEE IDX) */
			   MF_DATE,
			   SUBSTR(MF_DATE, 1, 2) AS YEAR,
			   CASE WHEN SUBSTR(MF_DATE, 3, 1) = '0' THEN SUBSTR(MF_DATE, 4, 1)
			   ELSE SUBSTR(MF_DATE, 3, 2)
			   END AS MONTH, 
			   HOUSE_INFO, 
			   MF_FEE, 
			   MF_HEAT, 
			   MF_ELECT,
			   MF_WATER, 
			   MF_TV, 
			   MF_CLEAN, 
			   MF_SECURITY, 
			   MF_ELEVATOR, 
			   MF_TRASH,
			   MF_TOTAL
		FROM MANAGEMENT_FEE
        WHERE HOUSE_INFO = #{houseInfo}
        ORDER BY 1 DESC
	</select>
	
	<sql id="minDate">
		SELECT TO_CHAR(ADD_MONTHS(TO_DATE(MIN(MF_DATE), 'YYMM'), 5), 'YYMM') FROM MANAGEMENT_FEE
	</sql>
	
	<select id="sixMonthsSelect" resultType="ManagementFeeVO">
		SELECT /*+ INDEX_DESC(MANAGEMENT_FEE IDX) */
			   MF_DATE, 
			   SUBSTR(MF_DATE, 1, 2) AS YEAR,
			   CASE WHEN SUBSTR(MF_DATE, 3, 1) = '0' THEN SUBSTR(MF_DATE, 4, 1)
			   ELSE SUBSTR(MF_DATE, 3, 2)
			   END AS MONTH,
			   MF_TOTAL
		FROM MANAGEMENT_FEE 
     	WHERE HOUSE_INFO = #{houseInfo}
        AND MF_DATE BETWEEN TRUNC(TO_CHAR(ADD_MONTHS(TO_DATE(#{mfDate}, 'YYMM'), -5), 'YYMM'))
        AND (
        		SELECT CASE WHEN (
        						<include refid="minDate" />
        						 ) > #{mfDate} THEN
        						 (
        						 <include refid="minDate" />
        						 )
         				ELSE #{mfDate} END
         		FROM DUAL
         	)
	</select>
	
	<select id="sixMonthsCurrent" resultType="ManagementFeeVO">
		SELECT /*+ INDEX_DESC(MANAGEMENT_FEE IDX) */
			   MF_DATE, 
			   SUBSTR(MF_DATE, 1, 2) AS YEAR,
			   CASE WHEN SUBSTR(MF_DATE, 3, 1) = '0' THEN SUBSTR(MF_DATE, 4, 1)
			   ELSE SUBSTR(MF_DATE, 3, 2)
			   END AS MONTH,
			   MF_TOTAL
		FROM MANAGEMENT_FEE 
     	WHERE HOUSE_INFO =1011001
        AND MF_DATE BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE, -5), 'YYMM')
        AND TO_CHAR(SYSDATE, 'YYMM')
	</select>
	
	<select id="selectFee" resultType="ManagementFeeVO">
		SELECT /*+ INDEX_DESC(MANAGEMENT_FEE IDX) */
			   MF_DATE,
			   SUBSTR(MF_DATE, 1, 2) AS YEAR,
			   CASE WHEN SUBSTR(MF_DATE, 3, 1) = '0' THEN SUBSTR(MF_DATE, 4, 1)
			   ELSE SUBSTR(MF_DATE, 3, 2)
			   END AS MONTH, 
			   PAY_NO,
			   HOUSE_INFO, 
			   MF_FEE, 
			   MF_HEAT, 
			   MF_ELECT,
			   MF_WATER, 
			   MF_TV, 
			   MF_CLEAN, 
			   MF_SECURITY, 
			   MF_ELEVATOR, 
			   MF_TRASH,
			   MF_TOTAL,
			   (
			   		SELECT MF_TOTAL
                  	FROM MANAGEMENT_FEE
               		WHERE HOUSE_INFO = #{houseInfo}
                	AND MF_DATE = TO_CHAR(TO_DATE(#{mfDate}, 'YYMM')-1, 'YYMM')
                )
                AS LAST_MONTH_TOTAL
		FROM MANAGEMENT_FEE
        WHERE HOUSE_INFO = #{houseInfo}
        AND MF_DATE = #{mfDate}
	</select>
	
	<select id="selectCurrentFee" resultType="ManagementFeeVO">
		SELECT /*+ INDEX_DESC(MANAGEMENT_FEE IDX) */
			   MF_DATE,
			   SUBSTR(MF_DATE, 1, 2) AS YEAR,
			   CASE WHEN SUBSTR(MF_DATE, 3, 1) = '0' THEN SUBSTR(MF_DATE, 4, 1)
			   ELSE SUBSTR(MF_DATE, 3, 2)
			   END AS MONTH, 
			   HOUSE_INFO, 
			   PAY_NO,
			   MF_FEE, 
			   MF_HEAT, 
			   MF_ELECT,
			   MF_WATER, 
			   MF_TV, 
			   MF_CLEAN, 
			   MF_SECURITY, 
			   MF_ELEVATOR, 
			   MF_TRASH,
			   MF_TOTAL,
			   (
			   		SELECT MF_TOTAL
                  	FROM MANAGEMENT_FEE
               		WHERE HOUSE_INFO = #{houseInfo}
                	AND MF_DATE = TO_CHAR(TO_DATE((SELECT MAX(MF_DATE) FROM MANAGEMENT_FEE), 'YYMM')-1, 'YYMM')
                )
                AS LAST_MONTH_TOTAL
		FROM MANAGEMENT_FEE
        WHERE HOUSE_INFO = #{houseInfo}
        AND MF_DATE = (SELECT MAX(MF_DATE) FROM MANAGEMENT_FEE)
	</select>
	
	<select id="selectAvg" resultType="ManagementFeeVO">
		SELECT TRUNC(AVG(MF_TOTAL)) AS MF_AVG
		FROM MANAGEMENT_FEE
	</select>
	
	<select id="admSelectFeeList" resultType="ManagementFeeVO">
		SELECT /*+ INDEX_DESC(MANAGEMENT_FEE IDX) */
			   MF_DATE,
			   TO_DATE(MF_DATE, 'YYMM')-1 AS YEAR_MONTH,
		       SUBSTR(HOUSE_INFO, 1, 3) || '동' AS DONG,
               SUBSTR(HOUSE_INFO, 4, 4) || '호' AS HOSU,
               PAY_NO,
			   HOUSE_INFO, 
			   MF_FEE, 
			   MF_HEAT, 
			   MF_ELECT,
			   MF_WATER, 
			   MF_TV, 
			   MF_CLEAN, 
			   MF_SECURITY, 
			   MF_ELEVATOR, 
			   MF_TRASH,
			   MF_TOTAL,
			   CASE WHEN PAY_NO IS NULL THEN '미납'
               ELSE '납부완료' END PAID
		FROM MANAGEMENT_FEE
	</select>
	
	<sql id="avg">
		SELECT MF_DATE, 
			   SUBSTR(MF_DATE, 1, 2) AS YEAR,
			   CASE WHEN SUBSTR(MF_DATE, 3, 1) = '0' THEN SUBSTR(MF_DATE, 4, 1)
			   ELSE SUBSTR(MF_DATE, 3, 2)
			   END AS MONTH,
          	   MF_TOTAL,
               SUBSTR(HOUSE_INFO, 1, 3) AS DONG
        FROM MANAGEMENT_FEE
        WHERE MF_DATE = #{mfDate}
	</sql>
	
	<select id="samePyeongAvg" resultType="ManagementFeeVO">
		WITH A
		AS
		(
			<include refid="avg" />
		)
		
		SELECT (SELECT TRUNC(AVG(MF_TOTAL)) FROM A WHERE MOD(DONG, 2) = 1) AS ODD_AVG,
           	   (SELECT TRUNC(AVG(MF_TOTAL)) FROM A WHERE MOD(DONG, 2) = 0) AS EVEN_AVG
		FROM DUAL
		
	</select>

</mapper>